---
import Layout from "$/layouts/Layout.astro";
import BaseHead from "$components/BaseHead.astro";
import CodeText from "$components/CodeText.astro";
import FormattedDate from "$components/FormattedDate.astro";
import Header from "$components/Header.astro";
import IconTextLink from "$components/IconTextLink.astro";
import PostStats from "$components/PostStats.svelte";
import Prose from "$components/Prose.astro";
import Tags from "$components/Tags.astro";
import TOC from "$components/TOC.astro";
import ZoomImage from "$components/ZoomImage.svelte";
import type { MarkdownHeading } from "astro";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import "@radix-ui/themes/styles.css";
import { getSlugFromPathname } from "$/util";
import "$/styles/shaku.css";
import { formatISO } from "date-fns";

type Props = CollectionEntry<"blog">["data"] & {
  headings: MarkdownHeading[];
  remarkPluginFrontmatter: Record<string, any>;
};
const {
  title,
  description,
  pubDate,
  updatedDate,
  cover,
  coverAlt,
  tags,
  headings,
  remarkPluginFrontmatter,
} = Astro.props;

const slug = getSlugFromPathname(Astro.url.pathname);

const ogImageUrl = `/posts/${slug}/og.png`;
const tocEmpty = headings.length === 0;
---

<Layout
  title={title}
  description={description}
  description={remarkPluginFrontmatter.summary}
  seo={{
    openGraph: {
      basic: {
        title: `${title}`,
        image: ogImageUrl,
        type: "article",
      },
      article: {
        tags: tags,
        publishedTime: formatISO(new Date(pubDate)),
        authors: ["Aaron Lifton"],
      },
    },
    twitter: {
      card: "summary_large_image",
    },
    extend: {
      meta: [
        {
          name: "twitter:image",
          content: ogImageUrl,
        },
      ],
    },
  }}
>
  <Fragment slot="head">
    <BaseHead
      title={title}
      description={description}
      cover={cover?.src}
      {pubDate}
    />
  </Fragment>
  <Fragment slot="header">
    <Header />
  </Fragment>
  <Prose>
    <div
      data-blog-post-container
      data-toc={{ toc: tocEmpty ? "closed" : "open" }}
      class:list={[
        "group flex flex-col lg:flex-row-reverse lg:gap-8",
        !tocEmpty && "lg:flex-row-reverse",
        tocEmpty && "justify-center"
      ]}
    >
      {
        !tocEmpty && (
          <aside
            style={{
              "--offset-from-top": "1rem",
            }}
            class:list={[
              "relative",
              "shrink-0",
              "w-full",
              "lg:w-auto",
              "mb-0",
              "lg:mb-8",
              "lg:ml-auto",
              "lg:mb-0",
              "lg:basis-1/3",
              "lg:sticky",
              "lg:top-[var(--offset-from-top)]",
              "lg:h-[calc(100vh-var(--offset-from-top)_*_2)]",
              "[&_h2]:m-0",
              "lg:max-w-prose",
            ]}
          >
            <div
              data-blog-post-toc-container
              data-preload
              class:list={[
                "lg:h-full",
                "lg:p-4",
                "lg:ml-auto",
                "lg:group-data-toc-open:translate-x-0",
                "lg:group-data-toc-open:scale-x-1",
                "lg:group-data-toc-open:opacity-1",
                "lg:group-data-toc-closed:translate-x-full",
                "lg:group-data-toc-closed:opacity-0",
                "lg:group-data-toc-closed:scale-x-0",
                "lg:group-data-toc-closed:pointer-events-none",
                "transition-[transform,opacity]",
                "duration-300",
                "ease-in-out",
              ]}
            >
              <TOC headings={headings} />
            </div>
          </aside>
        )
      }
      <!-- /** min-w-0 [&>pre]:my-8 [&>pre]:max-sm:full-bleed [&>[data-codeblock]]:my-8 -->
      <!-- [&>[data-codeblock]]:max-sm:full-bleed [&>[data-codeblock]_pre]:max-sm:rounded-none -->
      <div data-blog-post class="min-w-0">
          <Tags tags={tags} />
          <div class="prose">
            <div class="title">
              <span class="mb-3 date">
                <FormattedDate date={pubDate} />
                {
                  updatedDate && (
                    <div class="last-updated-on">
                      Last updated on <FormattedDate date={updatedDate} />
                    </div>
                  )
                }
              </span>
              <PostStats {slug} client:load />
              <h1><CodeText text={title} /></h1>
              <hr class="not-prose" />
            </div>
            <slot />
            <IconTextLink
              data-back-to-top
              text="Back to top"
              iconName="tabler/chevron-up"
            />
          </div>
        </div>
      </div>
    </div>
  </Prose>
</Layout>
<style>
[data-back-to-top] {
  @apply cursor-pointer no-underline;
}
.hero-image {
  @apply max-w-full;
}
.hero-image img {
  display: block;
  margin: 0 auto;
  border-radius: 12px;
  box-shadow: var(--box-shadow);
}
.title {
  padding: 1em 0 0 0;
  text-align: center;
  line-height: 1;
}
.title hr {
  margin-bottom: 0;
}
.title h1 {
  @apply mb-6 mt-4;
}
.last-updated-on {
  font-style: italic;
}
</style>

<script>
document.addEventListener("astro:page-load", () => {
  const backToTopButton = document.querySelector("[data-back-to-top]");
  backToTopButton?.addEventListener("click", () => {
    window.scrollTo({
      top: 0,
      behavior: "smooth",
    });
  });
});
</script>
