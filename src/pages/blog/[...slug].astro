---
import { Image } from "astro:assets";
import { type CollectionEntry, getCollection } from "astro:content";
import CodeBlock from "$components/CodeBlock.astro";
import ZoomImage from "$components/ZoomImage.svelte";
import ZoomableImage from "$components/react/ZoomableImage.tsx";
import BlogPost from "$layouts/BlogPost.astro";

export const prerender = true;
export async function getStaticPaths() {
	const posts = await getCollection("blog");
	return posts
		.filter((post) => !post.data.draft)
		.map((post) => ({
			params: { slug: post.slug },
			props: post,
		}));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await post.render();

let width = post.data.cover.width;
let height = post.data.cover.height;
if (post.data.cover.width > 1000) {
	width /= 2;
	height /= 2;
}
---

<BlogPost {...post.data} {headings} {remarkPluginFrontmatter}>
  <div class="flex w-full flex-col gap-8 pb-4 transition-all md:flex-row">
    <ZoomableImage
      src={post.data.cover}
      alt={post.data.coverAlt}
      caption={post.data.coverAlt}
      client:load
    >
      <Image src={post.data.cover} {width} {height} alt={post.data.coverAlt} />
    </ZoomImage>
  </div>
  <Content components={{ pre: CodeBlock }}/>
</BlogPost>
