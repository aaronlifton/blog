---
import Prose from "$components/Prose.astro";
import ZoomImage from "$components/react/ZoomImage.tsx";
import BlogPost from "$layouts/BlogPost.astro";
import { Image } from "astro:assets";
import { type CollectionEntry, getCollection } from "astro:content";

export const prerender = true;
export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts
    .filter((post) => !post.data.draft)
    .map((post) => ({
      params: { slug: post.slug },
      props: post,
    }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await post.render();
---

<BlogPost {...post.data} {headings} {remarkPluginFrontmatter}>
  {
    post.data.cover && (
      <div class="flex flex-col items-center w-full">
        <ZoomImage
          dialogId="main-image"
          src={post.data.cover.src}
          alt={post.data.coverAlt}
          client:load
        >
          <Image
            id={`img-${post.slug}`}
            src={post.data.cover}
            width={1500}
            height={643}
            alt={post.data.coverAlt || ""}
            loading="lazy"
            decoding="async"
            format="webp"
            transition:name={`img-${post.slug}`}
            transition:animate="fade"
          />
        </ZoomImage>
        <Prose className={"mt-2 mb-6 prose-gray"}>
          <figcaption class="italic" id="header-image__caption">
            {post.data.coverAlt}
          </figcaption>
        </Prose>
      </div>
    )
  }
  <Content />
</BlogPost>

<style>
#header-image__caption {
  @apply my-0;
  font-size: 0.75em;
}
</style>

<script is:inline define:vars={{ slug: post.slug }}>
// Disable the image from flying in from the top of the page, which is default
// Astro behavior
let oldAttribute;
document.addEventListener("scroll", () => {
  const img = document.getElementById(`img-${slug}`);
  if (!img) {
    return;
  }
  oldAttribute = img.getAttribute("data-astro-transition-scope");
  if (window.scrollY > 1000) {
    img.setAttribute("data-astro-transition-scope", null);
  } else {
    img.setAttribute("data-astro-transition-scope", oldAttribute);
  }
});
</script>
