---
import Layout from "$/layouts/Layout.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import Prose from "$components/Prose.astro";
import PostPreviewList from "$components/PostPreviewList.astro";
import PostPreviewListFooter from "$components/PostPreviewListFooter.astro";
import LatestCodeList from "$components/LatestCodeList.astro";

export const prerender = true;

let posts: CollectionEntry<"blog">[] = await getCollection("blog");
posts = Array.from(posts)
	.filter((post) => !post.data.draft)
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<Layout>
  <div class="hero flex justify-center pb-vert-padding">
    <div class="hero__tagline flex justify-center">
      <Prose className="prose prose-base mb-3 text-center lg:prose-base">
        A developer blog focusing on Ruby on Rails, React, AstroJS, and Neovim.
      </Prose>
    </div>
  </div>
  <div
    class="flex flex-col gap-0 rounded-lg border border-2 border-card-border bg-card-bg bg-opacity-50 p-4
    scrollbar-thin scrollbar-track-card-bg sm:flex-row sm:gap-6"
  >
    <LatestCodeList />
  </div>

  <!-- <div class="flex flex-col"> -->
  <!--   <div -->
  <!--     class="my-4 flex w-1/2 flex-col gap-0 rounded-lg border border-2 border-card-border bg-card-bg bg-opacity-50 p-4" -->
  <!--   > -->
  <!--     <DeployWatch /> -->
  <!--   </div> -->
  <!-- </div> -->
  <PostPreviewList posts={posts} heading="Recent posts" asCard />
  <!-- <PostPreviewList posts={po {deploys.map((deploy) => (

    <ul>
      <h2>Deploy ID: {deploy.deploy.id}</h2>
      <li>Status: {deploy.deploy.status}</li>
      <li>Trigger: {deploy.deploy.trigger}</li>
      <li>Created At: {deploy.deploy.createdAt}</li>
      <li>Updated At: {deploy.deploy.updatedAt}</li>
      <li>Finished At: {deploy.deploy.finishedAt}</li>
    </ul>
  ))}sts} heading="Recent posts" /> -->
  <PostPreviewListFooter />
</Layout>
