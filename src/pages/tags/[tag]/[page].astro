---
export const prerender = true;
import HeadingWithIcon from "$/components/HeadingWithIcon.astro";
import Pages from "$/components/Pages.svelte";
import PostPreviewList from "$/components/PostPreviewList.astro";
import { PAGE_SIZE } from "$/consts";
import Layout from "$/layouts/Layout.astro";
import { getPosts, getPostsByTag, getTags } from "$/services/blog";
import { type CollectionEntry, getCollection } from "astro:content";

// @ts-ignore ts-nocheck
export async function getStaticPaths({ paginate }) {
  const posts = await getPosts();
  const tags = await getTags();
  const allTags = new Set<string>();
  for (const post of posts) {
    for (const tag of post.data.tags) {
      allTags.add(tag);
    }
  }

  return Array.from(allTags).flatMap((tag) => {
    const postsWithTag = posts.filter((post) => post.data.tags.includes(tag));
    return paginate(postsWithTag, {
      params: { page: 1, tag },
      props: { allTags },
      pageSize: PAGE_SIZE,
    });
  });
}

type Props = {
  page: {
    data: CollectionEntry<"blog">[];
    currentPage: number;
    lastPage: number;
  };
};
type Params = { tag: string; page: number };

const { page } = Astro.props as Props;
const { tag } = Astro.params as Params;
---

<Layout>
  <div class="flex justify-center items-center title">
    <HeadingWithIcon text={tag} {tag} className="mr-2" />
    <span class="relative emdash top-[-4px]">â€”</span>
    <span class="relative italic text-center top-[-4px] text-accent-gray-dark">
      Page {page.currentPage}
    </span>
  </div>
  <PostPreviewList posts={page.data} heading="Posts" asCard={false} />
  <Pages
    baseUrl={Astro.url.pathname.slice(0, -2)}
    currentPage={page.currentPage}
    totalPages={page.lastPage}
  />
</Layout>
<style>
.emdash {
  span + span {
    position: relative;
    top: -4px;
  }
}

.title span {
  align-items: middle;
  line-height: 6;
}
</style>
