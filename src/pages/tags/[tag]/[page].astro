---
export const prerender = true;
import { getCollection, type CollectionEntry } from "astro:content";
import HeadingWithIcon from "$/components/HeadingWithIcon.astro";
import Pages from "$/components/Pages.svelte";
import PostPreviewList from "$/components/PostPreviewList.astro";
import { PAGE_SIZE } from "$/consts";
import Layout from "$/layouts/Layout.astro";
import { getIsMobile } from "$/util";

const isMobile = getIsMobile(Astro);

// @ts-ignore ts-nocheck
export async function getStaticPaths({ paginate }) {
	const allPosts = await getCollection("blog");
	const filteredPosts = allPosts.filter((post) => !post.data.draft);

	const allTags = new Set<string>();
	filteredPosts.forEach((post) => {
		post.data.tags && post.data.tags.forEach((tag) => allTags.add(tag));
	});

	return Array.from(allTags).flatMap((tag) => {
		const postsWithTag = allPosts.filter((post) =>
			post.data.tags.includes(tag),
		);
		return paginate(postsWithTag, {
			params: { page: 1, tag },
			props: { allTags },
			pageSize: PAGE_SIZE,
		});
	});
}

type Props = {
	page: {
		data: CollectionEntry<"blog">[];
		currentPage: number;
		lastPage: number;
	};
};
type Params = { tag: string; page: number };

const { page } = Astro.props as Props;
const { tag } = Astro.params as Params;
---

<Layout>
  <div class="title flex items-center justify-center align-middle leading-4">
    <HeadingWithIcon text={tag} {tag} className="mr-2" />
    <span class="emdash">â€”</span>
    <span
      class="relative top-[-0.1ch] text-center italic leading-4">
      Page {page.currentPage}
    </span>
  </div>
  <PostPreviewList posts={page.data} heading="Posts" asCard={isMobile()} />
  <Pages
    baseUrl={Astro.url.pathname.slice(0, -2)}
    currentPage={page.currentPage}
    totalPages={page.lastPage}
  />
</Layout>
<style>
  .emdash {
    span + span {
      position: relative;
      top: -4px;
    }
  }

  .title span {
    align-items: middle;
    line-height: 6;
  }
</style>
