---
import { PAGE_SIZE } from "$/consts";
import { getAllPosts, getTags } from "$/services/blog";
import TagPage from "$components/TagPage.astro";
import type { CollectionEntry } from "astro:content"
export const prerender = true;

// @ts-ignore ts-nocheck
export async function getStaticPaths({ paginate }) {
  const posts = await getAllPosts();
  const tags = await getTags();
  const allTags = new Set<string>();
  for (const post of posts) {
    for (const tag of post.data.tags) {
      allTags.add(tag);
    }
  }

  return Array.from(allTags).flatMap((tag) => {
    const postsWithTag = posts.filter((post) => post.data.tags.includes(tag));
    return paginate(postsWithTag, {
      params: { page: 1, tag },
      props: { allTags },
      pageSize: PAGE_SIZE,
    });
  });
}

type Props = {
  page: {
    data: CollectionEntry<"blog">[];
    currentPage: number;
    lastPage: number;
  };
};
type Params = { tag: string; page: number };

const { page } = Astro.props as Props;
const { tag } = Astro.params as Params;
---

<TagPage tag={tag} page={page} />
