---
export const prerender = true;
import type { InferGetStaticParamsType, InferGetStaticPropsType } from "astro";
import { getCollection } from "astro:content";
import HeadingWithIcon from "$/components/HeadingWithIcon.astro";
import Pages from "$/components/Pages.svelte";
import PostPreviewList from "$/components/PostPreviewList.astro";
import { PAGE_SIZE } from "$/consts";
import Layout from "$/layouts/Layout.astro";

export async function getStaticPaths({ paginate }) {
  const allPosts = await getCollection("blog");
  const filteredPosts = allPosts.filter((post) => !post.data.draft);
  const allTags = new Set<string>();
  filteredPosts.map((post) => {
    post.data.tags && post.data.tags.map((tag) => allTags.add(tag));
  });

  return Array.from(allTags).flatMap((tag) => {
    const postsWithTag = allPosts.filter((post) =>
      post.data.tags.includes(tag),
    );
    return paginate(postsWithTag, {
      params: { tag },
      props: { allTags },
      pageSize: PAGE_SIZE,
    });
  });
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props as Props;
const { tag } = Astro.params as Params;
---

<Layout>
  <div class="flex justify-center items-center align-middle leading-4 title">
    <HeadingWithIcon text={tag} {tag} className="mr-2" />
    <span class="emdash">â€”</span>
    <span
      class="relative top-[-0.1ch] text-center italic leading-4
      text-theme-accent-gray-dark"
    >
      Page {page.currentPage}
    </span>
  </div>
  <PostPreviewList posts={page.data} heading="Posts" />
  <Pages
    baseUrl={Astro.url.pathname.slice(0, -2)}
    currentPage={page.currentPage}
    totalPages={page.lastPage}
  />
</Layout>

<style>
  .emdash,
  span + span {
    position: relative;
    top: -4px;
  }
  .title {
    span {
      @apply align-middle leading-6;
    }
  }
</style>
