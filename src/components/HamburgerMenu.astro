---
// import ThemeSelect from '@components/ThemeSelect.astro'
import IconButton from "$components/react/IconButton";
import { menuItems } from "$util/menu.ts";
import { Icon } from "astro-icon/components";

type IsActiveMenuItemOptions = {
  currentPathname: string;
  menuItemPathname: string;
  rootPathname: string;
};

export const isActiveMenuItem = ({
  currentPathname,
  menuItemPathname,
  rootPathname,
}: IsActiveMenuItemOptions) => {
  let isActive = currentPathname.startsWith(menuItemPathname);

  if (menuItemPathname === rootPathname) {
    isActive = currentPathname === menuItemPathname;
  }

  if (`${currentPathname}/` === rootPathname) {
    isActive = `${currentPathname}/` === menuItemPathname;
  }

  return isActive;
};
---

<aside
  id="sidenav"
  data-a11y-dialog="sidenav"
  aria-hidden="true"
  class="fixed z-50 w-full h-full"
  style="visibility: hidden;"
  data-hamburger-nav
>
  <div
    data-a11y-dialog-hide
    class="fixed inset-0 w-full -z-1 mt-nav-height bg-purple-50/50 backdrop-blur-sm"
  >
  </div>

  <div
    role="document"
    class="flex z-50 flex-col py-0 ml-auto w-full h-full rounded-none bg-background margin-auto will-change-transform"
  >
    <div
      data-close-btn
      class="flex justify-end items-center mb-2 h-nav-height px-horizontal-padding"
    >
      <IconButton
        variant="rounded-full"
        data-a11y-dialog-hide
        aria-label="Close"
      >
        <Icon name="tabler/x" />
      </IconButton>
    </div>

    <nav
      class="flex flex-col w-full translate-y-[-9px]"
      aria-label="Main navigation"
    >
      <ul
        class="flex overflow-y-auto flex-col justify-center items-center p-3 w-full h-full list-none bg-purple-50 bg-amethyst-100/75 border-amethyst-300/55 px-horizontal-padding"
      >
        {
          menuItems.map((item) => {
          const isActive = isActiveMenuItem({
            currentPathname: Astro.url.pathname,
            menuItemPathname: item.pathname,
            rootPathname: "/",
          });

          return (
            <li class="mb-2 w-full shadow-sm shadow-gray-200 border-[1px]">
              <a
                class="text-md text-gray-800 not-prose block w-full bg-[var(--on-primary)] px-4 py-2 transition-colors duration-75 ease-in-out hover:bg-gray-200 focus:bg-gray-200 active:bg-gray-200 bg-gray-100"
                href={item.pathname}
                color={isActive ? "primary" : "secondary"}
                {...(isActive && { "aria-current": "page" })}
              >
                {item.name}
              </a>
            </li>
          );
          })
        }
      </ul>
    </nav>
  </div>
</aside>

<script>
import A11yDialog from "a11y-dialog";

const DIALOG_BACKDROP_ANIMATION_DURATION = 300;
const DIALOG_CONTENT_ANIMATION_DURATION = 300;
const maxAnimationDuration = Math.max(
  DIALOG_CONTENT_ANIMATION_DURATION,
  DIALOG_BACKDROP_ANIMATION_DURATION,
);

const init = () => {
  const dialogElement = document.querySelector<HTMLElement>(
    "[data-a11y-dialog]",
  );

  if (!dialogElement) {
    return;
  }
  const dialog = new A11yDialog(dialogElement);
  const backdrop = dialogElement.querySelector<HTMLElement>(
    "[data-a11y-dialog-hide]",
  );
  const content = dialogElement.querySelector<HTMLElement>("[role=document]");

  if (!backdrop || !content) {
    return;
  }

  const hideSidenav = () => {
    backdrop.style.transition =
      `opacity ${DIALOG_BACKDROP_ANIMATION_DURATION}ms ease`;
    content.style.transition =
      `transform ${DIALOG_CONTENT_ANIMATION_DURATION}ms ease`;
    dialogElement.style.transition =
      `visibility 0ms ${maxAnimationDuration}ms ease`;

    content.style.transform = "translateX(100%)";
    backdrop.style.opacity = "0";
    dialogElement.style.visibility = "hidden";

    document.body.style.overflowY = "visible";
  };

  const showSidenav = () => {
    dialogElement.style.transition = `visibility 0ms`;
    backdrop.style.transition =
      `opacity ${DIALOG_BACKDROP_ANIMATION_DURATION}ms ease`;
    content.style.transition =
      `transform ${DIALOG_CONTENT_ANIMATION_DURATION}ms ease`;

    dialogElement.style.visibility = "visible";
    backdrop.style.opacity = "1";
    content.style.transform = "translateX(0px)";

    dialogElement
      .querySelector<HTMLElement>("button[data-a11y-dialog-hide]")
      ?.focus();

    document.body.style.overflowY = "hidden";
  };

  hideSidenav();

  dialogElement.addEventListener("show", () => {
    showSidenav();
  });

  dialogElement.addEventListener("hide", () => {
    hideSidenav();
  });

  document
    .querySelector("div[role=document]")
    ?.addEventListener("click", () => {
      console.log(dialog);
      dialog.hide();
    });
};

init();

document.addEventListener("astro:page-load", init);
</script>

<style>
[data-close-btn] {
  opacity: 0;
}
</style>
