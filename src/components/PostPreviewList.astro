---
import { getMonthName } from "$/util";
import type { CollectionEntry } from "astro:content";
import PostPreview from "./PostPreview.astro";
import { format } from "date-fns";

interface Props {
  posts: CollectionEntry<"blog">[];
  heading?: string;
  asCard?: boolean;
  noTransition?: boolean;
}

const { posts, heading, noTransition, asCard = false } = Astro.props;
---

{heading && <h2>{heading}</h2>}
<!-- <hr /> -->
{
  asCard
  ? (
    <section
      class={`post-preview__list xl:grid-cols-3 lg:grid-cols-2 sm:grid-cols-1 grid-cols-1 grid gap-4 bg-opacity-50 sm:gap-6`}
    >
      {
        posts.map((post) => (
          <PostPreview
            post={post}
            asCard={asCard}
            noTransition={noTransition}
          />
        ))
      }
    </section>
  )
  : (
    <ul>
      {
        posts.map((post) => {
          const formattedDate = format(post.data.pubDate, "yyyy-MM-dd");
          return (
            <li class="mb-2 sm:mb-0">
              <a href={`/blog/${post.slug}`}>{post.data.title}</a>
              <time class="ml-2 text-gray-400" datetime={formattedDate}>
              {
                `${new Date(post.data.pubDate).getDate()} ${
                  getMonthName(post.data.pubDate)
                } ${new Date(post.data.pubDate).getFullYear()}`
              }
              </span>
            </li>
          )
        })
      }
    </ul>
  )
}

<style>
h2 {
  @apply my-vert-padding text-2xl mt-[calc(var(--vert-padding)*2)];
}
</style>
